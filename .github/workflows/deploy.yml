name: Deploy to Azure environments

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
    - ".github/workflows/**"
    - "*.yml"
    - "README.md"
    - "Documents"
  
jobs:
  deployInfra:
    name: deployInfra
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.createInfra.outputs.web }}
      acr: ${{ steps.createInfra.outputs.acr }}
      kv: ${{ steps.createInfra.outputs.kv }}
    steps:
    
    - uses: actions/checkout@v2.5.0
    - name: 'Az CLI login without OIDC'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create infrastructure
      id: createInfra
      run: |
        az group create -l westeurope -n TailwindTraders
        WEB=$(az deployment group create -g TailwindTraders -f ./Deploy/main.bicep)
        SITE=$(echo $WEB | jq -re .properties.outputs.web.value)
        ACR=$(echo $WEB | jq -re .properties.outputs.acr.value)
        KV=$(echo $WEB | jq -re .properties.outputs.kv.value)
        echo "::set-output name=web::$SITE"
        echo "::set-output name=acr::$ACR"
        echo "::set-output name=kv::$KV"

  deployStaging:
    environment:
      name: Staging
      url: 'http://${{ needs.deployInfra.outputs.web }}-staging.azurewebsites.net'
    needs: deployInfra
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Az CLI login with OIDC'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Azure key vault - Get Secrets
      id: getSecrets
      uses: Azure/get-keyvault-secrets@v1.2
      with:
        keyvault: ${{ needs.deployInfra.outputs.kv }}
        secrets: 'acrPassword'

    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ needs.deployInfra.outputs.acr }}
        password: ${{ steps.getSecrets.outputs.acrPassword }}
        login-server: ${{ needs.deployInfra.outputs.acr }}.azurecr.io

    - run: |
        ls -la
        cd ./Source/Tailwind.Traders.Web
        docker build . -t ${{ needs.deployInfra.outputs.acr }}.azurecr.io/tailwindtraders-app:latest
        docker push ${{ needs.deployInfra.outputs.acr }}.azurecr.io/tailwindtraders-app:latest

    - name: Deploy image to staging slot
      uses: Azure/webapps-deploy@v2.2.3
      with:
        app-name: '${{ needs.deployInfra.outputs.web }}'
        slot-name: staging
        images: ${{ needs.deployInfra.outputs.acr }}.azurecr.io/tailwindtraders-app:latest
  
  deployProduction:
    environment:
      name: Production
      url: 'http://${{ needs.deployInfra.outputs.web }}.azurewebsites.net'
    needs: [deployStaging, deployInfra]
    runs-on: ubuntu-18.04
    permissions:
      id-token: write
      contents: read
      
    steps:
    - uses: actions/checkout@v2.5.0

    - name: Azure login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Swap staging to production
      run: |
        az webapp deployment slot swap --name ${{ needs.deployInfra.outputs.web }} --resource-group TailwindTraders --slot staging --target-slot production

